<?php

/**
 * @file
 * Contains vies_application.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Render\Element;
use Drupal\vih_subscription\Form\SubscriptionsGeneralSettingsForm;
use Drupal\node\Entity\Node;

/**
 * Implements hook_help().
 */
function vies_application_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the vies_application module.
    case 'help.page.vies_application':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('VIES Students application') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function vies_application_theme() {
  return [
    'vies_application_form' => [
      'render element' => 'form',
    ],
    'vies_application_periods' => [
      'render element' => 'form',
    ],
    'vies_application_personal_data' => [
      'render element' => 'form',
    ],
    'vies_application_section' => [
      'render element' => 'form',
    ],
    'vies_application_questions' => [
      'render element' => 'form',
    ],
    'vies_application_submit_message' => [
      'variables' => [
        'title' => NULL,
        'message' => NULL,
        'backlink' => NULL,
      ],
    ],
    'vies_added_parents' => [
      'render element' => 'container',
    ],
  ];
}

/**
 * Implements hook_inline_entity_form_entity_form_alter().
 */
function vies_application_inline_entity_form_entity_form_alter(&$entity_form, &$form_state) {
  if ($entity_form['#entity_type'] == 'taxonomy_term'
    && $entity_form['#bundle'] == 'questions') {
    $entity_form['#attributes']['class'] = ['questions-inline-form'];
    $entity_form['field_vies_question_type']['widget']['#attributes']['class'] = ['questions-inline-form-type'];
    $entity_form['#attached']['library'][] = 'vies_application/vies-application';
  }
}

/**
 * Implements hook_form_alter().
 */
function vies_application_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  if (in_array($form['#form_id'], [
        'node_vies_application_form_edit_form',
        'node_vies_application_form_form',
      ])) {
    foreach ([
  'field_vies_about_school',
  'field_vies_afterschool',
  'field_vies_class_questions',
    ] as $field) {
      if (empty($form[$field]['widget']['entities'])) {
        continue;
      }
      $entities = &$form[$field]['widget']['entities'];
      foreach (Element::children($entities) as $key) {
        if (!empty($entities[$key]['#entity']->field_question->value)) {
          $entities[$key]['#label'] = $entities[$key]['#entity']->field_question->value;
        }
      }
    }
    if (!empty($form['field_vies_parents']['widget']['entities'])) {
      $entities = &$form['field_vies_parents']['widget']['entities'];
      foreach (Element::children($entities) as $key) {
        $label = $entities[$key]['#entity']->field_parent_type->value . ': ';
        $label .= $entities[$key]['#entity']->field_parent_first_name->value . ' ';
        $label .= $entities[$key]['#entity']->field_parent_last_name->value;
        $entities[$key]['#label'] = $label;
      }
    }
  }
  if($form['#form_id'] == 'vih_subscription_subscriptons_general_settings_form'){
    $config = \Drupal::config(SubscriptionsGeneralSettingsForm::$configName);
    $form['vih_subscription_settings_apliction_fs'] = [
      '#type' => 'details',
      '#title' => t('Application settings'),
      '#open' => FALSE,
    ];
    // vies_application.application_form_success page.
      $form['vih_subscription_settings_apliction_fs']['vih_subscription_aplication_success_page'] = [
        '#type' => 'entity_autocomplete',
        '#target_type' => 'node',
        '#selection_settings' => ['target_bundles' => ['page']],
        '#title' => t('Application success page'),
        '#default_value' => !empty($config->get('vih_subscription_aplication_success_page')) ? Node::load($config->get('vih_subscription_aplication_success_page')) : NULL,
        '#description' => t("You can use any 'page' node as '/ansogning/success' page"),
      ];

      $form['vih_subscription_settings_apliction_fs']['vih_subscription_apliction_language_specific'] = array(
        '#type' => 'vertical_tabs',
        '#default_tab' => 'edit-vih-subscription-apliction-da',
      );

      $form['edit-vih-subscription-apliction-da'] = array(
        '#type' => 'details',
        '#title' => t('Danish'),
        '#group' => 'vih_subscription_apliction_language_specific',
        '#weight' => -1
      );

      $form['edit-vih-subscription-apliction-da']['vih_subscription_notifications_apliction_fs_da'] = [
        '#type' => 'details',
        '#title' => t('Notifications (danish)'),
        '#open' => TRUE,
      ];
      $form['edit-vih-subscription-apliction-da']['vih_subscription_notifications_apliction_fs_da']['vih_subscription_apliction_notifications_bcc_da'] = [
        '#type' => 'textfield',
        '#title' => t('Bcc'),
        '#default_value' => $config->get('vih_subscription_apliction_notifications_bcc_da'),
        '#description' => t('Example: email@vih.dk,email2@gmail.com')
      ];
      $form['edit-vih-subscription-apliction-da']['vih_subscription_notifications_apliction_fs_da']['vih_subscription_apliction_notifications_subject_da'] = [
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => $config->get('vih_subscription_apliction_notifications_subject_da'),
      ];
      $notification_description = t("You can use the following replacement tokens: <br>
      <b>@subject_name</b> => Name of the apliction <br>
      <b>@person_name</b> => Name of the person <br>
      <b>@application</b> => Application full information <br>");
      $form['edit-vih-subscription-apliction-da']['vih_subscription_notifications_apliction_fs_da']['vih_subscription_apliction_notifications_body_da'] = [
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => $config->get('vih_subscription_apliction_notifications_body_da'),
        '#description' => $notification_description,
      ];
  }
}